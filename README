This is to build buildroot sdcard image for following SBC's:
rpi4b  ( Raspberry Pi 4B )
radxa  ( Rock Pi 4B plus )
rk3328 ( Renegade ROC-RK3328-CC )
tinker ( ASUS TinkerBoard )

Steps to build buildroot sdcard image:

1. Install cross compiler:
   wget https://releases.linaro.org/components/toolchain/binaries/7.3-2018.05/aarch64-linux-gnu/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/7.3-2018.05/arm-linux-gnueabihf/gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/

2. git clone https://github.com/chenphilip888/build-buildroot-4SBCs.git

3. cd ~/build-buildroot-4SBCs/rpi4b
   git clone git://git.buildroot.net/buildroot
   cp ./patches/rpi4b_defconfig ./buildroot/configs
   cp ./patches/raspberrypi4/* ./buildroot/board/raspberrypi4/
   cd buildroot
   make clean
   make rpi4b_defconfig
   make 

   The result is in ~/build-buildroot-4SBCs/rpi4b/buildroot/output/images/sdcard.img

   sudo dd if=~/build-buildroot-4SBCs/rpi4b/buildroot/output/images/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p2
   sudo resize2fs /dev/mmcblk0p2
   sudo e2label /dev/mmcblk0p2 rootfs

4. cd ~/build-buildroot-4SBCs/radxa
   git clone git://git.buildroot.net/buildroot
   cp ./patches/rockpi4_defconfig ./buildroot/configs
   \rm -rf ./buildroot/board/radxa/rockpi-4
   cp -r ./patches/rockpi-4 ./buildroot/board/radxa
   cd buildroot
   make clean
   make rockpi4_defconfig 
   make

   The result is in ~/build-buildroot-4SBCs/radxa/buildroot/output/images/sdcard.img 

   sudo dd if=~/build-buildroot-4SBCs/radxa/buildroot/output/images/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p5
   sudo resize2fs /dev/mmcblk0p5
   sudo e2label /dev/mmcblk0p5 rootfs

5. cd ~/build-buildroot-4SBCs/rk3328
   git clone git://git.buildroot.net/buildroot
   cp ./patches/rk3328_defconfig ./buildroot/configs
   \rm -rf ./buildroot/board/roc-rk3328-cc
   cp -r ./patches/roc-rk3328-cc ./buildroot/board
   cd buildroot
   make clean
   make rk3328_defconfig
   make
   when error occured after compiling kernel:
   cp ../patches/Makefile ./output/build/linux-rk3328_firefly/arch/arm64/boot/dts/rockchip/Makefile
   make

   The result is in ~/build-buildroot-4SBCs/rk3328/buildroot/output/images/sdcard.img

   sudo dd if=~/build-buildroot-4SBCs/rk3328/buildroot/output/images/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p5
   sudo resize2fs /dev/mmcblk0p5
   sudo e2label /dev/mmcblk0p5 rootfs

6. cd ~/build-buildroot-4SBCs/tinker
   git clone git://git.buildroot.net/buildroot
   cp ./patches/tinker_defconfig ./buildroot/configs
   \rm -rf ./buildroot/board/asus/tinker
   cp -r ./patches/tinker ./buildroot/board/asus
   cd buildroot
   make clean
   make tinker_defconfig
   make
   when error occured after compiling kernel:
   cp ../patches/gcc-wrapper.py ./output/build/linux-release/scripts/gcc-wrapper.py
   make

   The result is in ~/build-buildroot-4SBCs/tinker/buildroot/output/images/sdcard.img

   sudo dd if=~/build-buildroot-4SBCs/tinker/buildroot/output/images/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p2
   sudo resize2fs /dev/mmcblk0p2
   sudo e2label /dev/mmcblk0p2 rootfs

plugin sdcard to SBC
login:
username: root
password: linaro

setup wifi:
Note: Both radxa and rk3328 need to plugin usb wifi dongle.
      radxa on board wifi is not working in buildroot due to lack of software.
      rk3328 has no on board wifi.

vi /etc/wpa_supplicant.conf ( change to:
update_config=1
country=US
network={
        ssid="MYNETWORK"
        psk="secret"
}

vi /etc/network/interfaces ( delete everything after iface lo inet loopback )

vi /etc/rc.local ( change to:
#!/bin/sh
wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant.conf

chmod 755 /etc/rc.local

vi /etc/init.d/rcS ( append:
source /etc/rc.local

reboot
